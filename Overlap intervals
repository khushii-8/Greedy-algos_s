#include <bits/stdc++.h>
using namespace std;

// comparator function for sorting by end time
bool cmp(vector<int>& a, vector<int>& b) {
    return a[1] < b[1];
}

int eraseOverlapIntervals(vector<vector<int>>& intervals) {
    if (intervals.empty()) return 0;

    sort(intervals.begin(), intervals.end(), cmp); // sort by end time

    int count = 1;                  // choose first interval
    int lastEnd = intervals[0][1];  // store its end time

    for (int i = 1; i < intervals.size(); i++) {
        if (intervals[i][0] >= lastEnd) { // if no overlap
            count++;
            lastEnd = intervals[i][1];   // update last end
        }
    }

    return intervals.size() - count; // number to remove
}

int main() {
    int n; cin >> n;
    vector<vector<int>> intervals(n, vector<int>(2));
    for (int i = 0; i < n; i++) cin >> intervals[i][0] >> intervals[i][1];

    cout << "Minimum intervals to remove = " << eraseOverlapIntervals(intervals);
}
